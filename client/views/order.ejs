<!-- order.ejs -->
<!DOCTYPE html>
<html lang="en">
  
  <head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Type" content="application/javascript">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <title>Order</title>
    <style>

                /* Logo */
.logo {
  position: absolute;
  top: 5%;
  left: 50%;
  transform: translateX(-50%);
}

/* User Icon */
/* .user-icon {
  position: absolute;
  top: 0;
  right: 0;
  padding-right: 27px;
  padding-top: 8px;
} */


body {
  overflow-x: hidden;
}

header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #0b945b;
  color: #fff;
  padding: 10px;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 10001;
  box-shadow: 2px 0 10px rgba(0, 0, 0, 0.5);
}

.logo img {
  max-height: 45px;
  width: 180px;
}

.user-icon img {
  max-height: 25px;
  width: 30px;
  border-radius: 100%;
}

.sidebar {
  position: fixed;
  top: 0;
  left: -250px;
  width: 250px;
  height: 100%;
  background-color: #0b945b;
  /* box-shadow: 2px 0 10px rgba(0, 0, 0, 0.5); */
  transition: all 0.9s ease;
  z-index: 10000;
}

.sidebar ul {
  list-style: none;
  margin: 0;
  padding-top: 35%;
  padding-left: 0%;
  display: table;
}

.sidebar li {
  margin-bottom: 5px;
  background-color: none;
  transition: background-color 0.3s ease-in-out;
  border-radius: 4px;
  padding: 5px 70px 1px 30px;
  text-align: inline;
}

.sidebar a {
  color: #ffffff;
  text-decoration: none;
  font-size: 1rem;
}
.sidebar li:hover {
  background-color: rgb(78, 141, 102);
  color: white;
}

.sidebar.active {
  left: 0;
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  opacity: 0;
  visibility: hidden;
  transition: all 0.9s ease;
  z-index: 9999;
}

.overlay.active {
  opacity: 1;
  visibility: visible;
}


.hamburger {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  width: 30px;
  height: 20px;
  cursor: pointer;
  margin-top: 2px;
}

.bar {
  height: 2px;
  background-color: #fff;
  border-radius: 2px;
  transition: all 0.8s ease;
  margin-bottom: 5px; /* Adjust the spacing between the lines */
}

.bar:not(:last-child) {
  margin-bottom: 0px; /* Adjust the spacing between the lines */
}

.hamburger.active .bar:first-child {
  transform: rotate(45deg) translate(5px, 6px);
}

.hamburger.active .bar:nth-child(2) {
  opacity: 0;
}

.hamburger.active .bar:last-child {
  transform: rotate(-45deg) translate(5px, -6px);
}



        /* Styles for the order page */
        /* body {
            font-family: Arial, sans-serif;
            background-color: #f2f2f2;
        } */

        body {
          font-family: system-ui, 'Open Sans';
          font-size: 14px;
        }


        .order-container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #ffffff;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            animation: slideIn 0.5s ease-in-out;
        }

        h1 {
            font-size: 24px;
            margin-bottom: 20px;
            color: #333333;
            animation: fadeIn 0.5s ease-in-out;
        }

        .item-container {
            background-color: #f8f8f8;
            border: 1px solid #dddddd;
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 4px;
            animation: slideIn 0.5s ease-in-out;
            display: flex;
            align-items: center;
        }

        .item-image {
            width: 80px;
            height: 80px;
            object-fit: cover;
            margin-right: 20px;
        }

        p {
            margin: 5px 0;
            color: #666666;
        }

        .empty-cart {
            margin-top: 20px;
            text-align: center;
            color: #999999;
            animation: fadeIn 0.5s ease-in-out;
        }

        /* Responsive styles */
        @media screen and (max-width: 600px) {
            h1 {
                font-size: 20px;
            }
        }

        /* Animations */
        @keyframes slideIn {
            0% {
                opacity: 0;
                transform: translateX(-10px);
            }

            100% {
                opacity: 1;
                transform: translateX(0);
            }
        }

        @keyframes fadeIn {
            0% {
                opacity: 0;
            }

            100% {
                opacity: 1;
            }
        }

        /* Bottom Nav */
        .bottom-bar {
            position: fixed;
            bottom: 0;
            width: 100%;
            height: 60px;
            background-color: #f2f2f2;
            display: flex;
            justify-content: space-around;
            align-items: center;
        }

        .bottom-bar a {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            color: #777;
            text-decoration: none;
            font-size: 12px;
        }

        .bottom-bar a.active {
            color: #11e493;
            background-color: #f2f2f2;
        }

        .bottom-bar a i {
            font-size: 24px;
        }

                /* Checkout button */
                .checkout-button {
            margin-top: 20px;
            text-align: center;
        }

        .checkout-button button {
            padding: 10px 20px;
            font-size: 16px;
            background-color: #11e493;
            color: #ffffff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .delete-btn {
            color: rgb(241, 235, 235);
            background-color: rgb(194, 35, 35);
            border: none;
            border-radius: 2px;
            font-size: 13px;
        }
        .delete-btn:hover {
            color: rgb(241, 236, 236);
            background-color: rgb(236, 15, 15);
        } 





#loading-animation-container {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9999;
}

.loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Adjust the opacity as desired */
  backdrop-filter: blur(5px); /* Adjust the blur effect as desired */
}

.show-loading {
  display: flex !important;
  align-items: center;
  justify-content: center;
}

/* Add your custom styles for the loading animation here */


/* Define the keyframe animation */
@keyframes spinner {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Apply the spinner animation to a pseudo-element of the loading animation element */
#loading-animation::after {
  content: '';
  display: block;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  border: 4px solid #ccc;
  border-top-color: #333;
  animation: spinner 7.0s linear infinite;
}

/* Apply the new loading animation style */
/* #loading-animation::after {
  content: '';
  display: block;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background-color: #333;
  animation: pulsate 1s ease-in-out infinite;
} */

/* Define the pulsating animation */
/* @keyframes pulsate {
  0% {
    transform: scale(0.8);
    opacity: 0.8;
  }
  50% {
    transform: scale(1);
    opacity: 1;
  }
  100% {
    transform: scale(0.8);
    opacity: 0.8;
  }
} */

/* Apply the new loading animation style */
/* #loading-animation::after {
  content: '';
  display: block;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: radial-gradient(circle at center, #ff00ff, #00ff00, #0000ff);
  animation: spin 1.5s linear infinite;
} */

/* Define the spin animation */
/* @keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
} */


.bottom-bar a.loading i {
    animation: spin 2s infinite linear;
  }

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
</style>

</head>

<body>

  <header>
    <div class="logo">
      <img src="/images/WhatsApp_Image_2023-05-18_at_4.45.03_PM-removebg-preview.png" alt="Logo">
    </div>
 
    </div>
    <div class="hamburger">
      <!-- <div class="bar"></div>
      <div class="bar"></div>
      <div class="bar"></div> -->
    </div>
  </header>
  <aside class="sidebar">
    <nav>
      <ul>
        <li><a id="home" href="/dashboard.html"><i class="fas fa-home"></i> Home</i></a></li>
        <li id="dashboard"><a href="/profile"><i class="fas fa-chart-line fa-fw"></i> Dashboard</a></li>
        <li><a href="/order"><i class="fas fa-shopping-cart fa-fw"></i> My Cart</a></li>

      </ul>
      
      <form method="POST" action="/logout">
        <button type="submit" id="sidebtn"><i class="fas fa-sign-out-alt fa-fw"></i>Logout</button>
        <button type="#" id="downloadbtn"><i class="fas fa-sign-out-alt fa-fw"></i>Download App</button>
      </form>
      <hr>
      <a id="copyright">Â© Copyright 2023 SmartTechHubInc.</a>
    </nav>
  </aside>

  <br>
  <br>
  <br>



  <div class="order-container">
    <h1>Your Cart Items:</h1>
    <!-- Render order items -->
    <% cartItems.forEach(item => { %>
      <div class="item-container" data-item-id="<%= item.itemId %>" data-quantity="<%= item.quantity %>" data-image-url="<%= item.imageUrl %>">
        <!-- Item details -->
        <img src="<%= item.imageUrl %>" alt="<%= item.name %>" class="item-image">
        <div>
          <p>Item ID: <%= item.itemId %></p>
          <p>Name: <%= item.name %></p>
          <p>Price: <%= item.price %></p>
          <p>Quantity: <%= item.quantity %></p>
          <button class="delete-btn" data-item-id="<%= item.itemId %>">Delete</button>
        </div>
      </div>
    <% }) %>
    
    <% if (cartItems.length === 0) { %>
      <p class="empty-cart">Your cart is empty</p>
    <% } %>
  
    <div class="checkout-button">
      <button onclick="checkout()" id="checkout-btn">Checkout</button>
    </div>
  </div>
  
  <!-- Loading animation -->
  <div id="loading-animation-container">
    <div class="loading-overlay"></div>
    <div id="loading-animation"></div>
  </div>
  
  <div class="bottom-bar">
    <a href="/dashboard.html" class="bottom-icon" id="home-icon">
      <i class="fa fa-home"></i>
      Home
    </a>
    <a href="/about" class="bottom-icon" id="about-icon">
      <i class="fa fa-info-circle"></i>
      About
    </a>
    <a href="/order" id="order-btn" class="bottom-icon active" id="order-icon">
      <span class="notification" id="cart-count"></span>
      <i class="fa fa-shopping-cart"></i>
      Orders
    </a>
    <a href="/profile" class="bottom-icon" id="profile-icon">
      <i class="fa fa-user"></i>
      Profile
    </a>
  </div>
  
  <script>
      // Wait for the DOM content to load
      document.addEventListener('DOMContentLoaded', () => {
        const orderContainer = document.querySelector('.order-container');

        // Add event listener to the parent container and handle click events on delete buttons
        orderContainer.addEventListener('click', (event) => {
          if (event.target.classList.contains('delete-btn')) {
            const button = event.target;
            deleteCartItem(button);
          }
        });
      });
  
      function deleteCartItem(button) {
        const itemContainer = button.closest('.item-container');
        
        if (itemContainer) {
          const itemId = itemContainer.getAttribute('data-item-id');
        
          console.log('Item ID:', itemId);
        
          // Send a request to delete the item from the cart
          fetch('/delete-from-cart', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ itemId }),
          })
            .then(response => response.json())
            .then(data => {
              console.log('Item deleted from cart:', data);
              // Refresh the page or update the cart display if needed
        
              if (data.success) {
                // Remove the deleted item from the DOM
                itemContainer.remove();
              }
            })
            .catch(error => {
              console.error('Error deleting item from cart:', error);
              // Handle the error if needed
            });
        }
      }

  
    // Function to handle checkout
    function checkout() {
      const cartItems = Array.from(document.querySelectorAll('.item-container')).map(container => ({
        itemId: container.getAttribute('data-item-id'),
        name: container.querySelector('p:nth-child(2)').textContent.replace('Name: ', ''),
        price: parseFloat(container.querySelector('p:nth-child(3)').textContent.replace('Price: ', '')),
        quantity: parseInt(container.querySelector('p:nth-child(4)').textContent.replace('Quantity: ', '')),
        imageUrl: container.getAttribute('data-image-url'),
      }));
  
      if (cartItems.length === 0) {
        alert('No items have been added to the cart.');
        return;
      }
  
      // Calculate the total price
      const totalPrice = cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);
  
      // Redirect to the payment page with the total price
      window.location.href = '/payment?totalPrice=' + totalPrice;
    }
  </script>
  
  <script>
    // Add an event listener to the dashboard icon
    const dashboardLink = document.querySelector('.bottom-bar a[href="/dashboard.html"]');
    dashboardLink.addEventListener('click', handleDashboardClick);
  
    function handleDashboardClick(event) {
      event.preventDefault();
  
      // Add the loading animation class to the dashboard icon
      dashboardLink.classList.add('loading');
  
      // Simulate a delay to mimic loading
      setTimeout(() => {
        // Remove the loading animation class after the delay
        dashboardLink.classList.remove('loading');
  
        // Navigate to the dashboard page
        window.location.href = "/dashboard.html";
      }, 2000);
    }
  </script>
  
  <script>
    // Get the current URL path
    const currentPath = window.location.pathname;
  
    // Find the corresponding bottom icon and add the "active" class
    const bottomIcons = document.querySelectorAll('.bottom-icon');
    bottomIcons.forEach(icon => {
      if (icon.getAttribute('href') === currentPath) {
        icon.classList.add('active');
      }
    });
  </script>
  
</body>

</html>
