<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  <title>Payment</title>
  <style>
    /* Styles for the payment page */
    /* body {
      font-family: Arial, sans-serif;
      background-color: #f2f2f2;
    } */

    body {
      font-family: system-ui, 'Open Sans';
      font-size: 14px;
    }

    .payment-container {
      max-width: 600px;
      margin: 0 auto;
      padding: 20px;
      background-color: #ffffff;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    h1 {
      font-size: 24px;
      margin-bottom: 20px;
      color: #333333;
    }

    p {
      margin: 5px 0;
      color: #666666;
    }

    .total-price {
      font-size: 18px;
      font-weight: bold;
      margin-top: 10px;
    }

    .payment-form {
      margin-top: 20px;
    }

    .payment-input {
      width: 100%;
      padding: 10px;
      margin-bottom: 10px;
      border: 1px solid #dddddd;
      border-radius: 4px;
    }

    .payment-button {
      background-color: #11e493;
      color: #ffffff;
      border: none;
      padding: 10px 20px;
      font-size: 16px;
      border-radius: 4px;
      cursor: pointer;
    }

                    /* Bottom Nav */
              .bottom-bar {
                position: fixed;
                bottom: 0;
                width: 100%;
                height: 60px;
                background-color: #f2f2f2;
                display: flex;
                justify-content: space-around;
                align-items: center;
                z-index: 1;
              }

        .bottom-bar a {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            color: #777;
            text-decoration: none;
            font-size: 12px;
        }

        .bottom-bar a.active {
            color: #11e493;
            background-color: #f2f2f2;
        }

        .bottom-bar a i {
            font-size: 24px;
        }


   /* Styles for Pay to Bank Account section */
   .bank-account-section {
    margin-top: 40px;
    display: flex;
    flex-direction: column;
    align-items: center;
    height: calc(100vh - 160px); /* Adjust the height based on your requirements */
    overflow-y: auto; /* Add a vertical scroll if needed */
    padding-bottom: 60px; /* Add padding to create a scrolling space */
  }

  /* Styles for file upload */
  .file-upload-container {
    margin-top: 20px;
    text-align: center;
  }

  .file-upload-input {
    display: none;
  }

  .file-upload-label {
    display: inline-block;
    padding: 10px 20px;
    background-color: #11e493;
    color: #ffffff;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }

  .uploaded-file {
    margin-top: 20px;
    text-align: center;
  }

  .submit-button {
    margin-top: 20px;
  }



  #loading-animation-container {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9999;
}

.loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Adjust the opacity as desired */
  backdrop-filter: blur(5px); /* Adjust the blur effect as desired */
}

.show-loading {
  display: flex !important;
  align-items: center;
  justify-content: center;
}

/* Add your custom styles for the loading animation here */


/* Define the keyframe animation */
@keyframes spinner {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Apply the spinner animation to a pseudo-element of the loading animation element */
#loading-animation::after {
  content: '';
  display: block;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  border: 4px solid #ccc;
  border-top-color: #333;
  animation: spinner 7.0s linear infinite;
}

  </style>
</head>

<body>
  <div class="payment-container">
    <h1>Payment</h1>
    <p>Please enter your payment details below:</p>
    <p>Total Price: $<%= totalPrice %></p>
    <form class="payment-form" action="/process-payment" method="POST">
      <input type="text" name="cardNumber" class="payment-input" placeholder="Card Number" required>
      <input type="text" name="cardHolder" class="payment-input" placeholder="Card Holder" required>
      <input type="text" name="expiryDate" class="payment-input" placeholder="Expiry Date (MM/YY)" required>
      <input type="text" name="cvv" class="payment-input" placeholder="CVV" required>
      <button type="submit" class="payment-button">Pay Now</button>
    </form>

    <!-- <hr>

    <h1>Pay to Bank Account</h1>
    <p>Please make the payment to the following bank account:</p>
    <p>Account Number: <span id="account-number">1234567890</span></p>
    <p>Upload Payment Proof:</p>
    <input type="file" name="paymentProof" class="payment-input" required>

    <button type="submit" class="payment-button">Submit Payment Proof</button> -->
  </div>

  <br>

  <div class="payment-container">
      <!-- Pay to Bank Account section -->
      <div class="bank-account-section">
        <h1>Pay to Bank Account</h1>
        <p>Please make the payment to the following account:</p>
        <p>Account Number: 1234567890</p>
    
        <form action="/submit-payment-proof" method="post" enctype="multipart/form-data">
          <!-- File upload section -->
          <div class="file-upload-container">
            <input type="file" name="paymentProof" id="paymentProof" class="file-upload-input">
            <label for="paymentProof" class="file-upload-label">Upload Payment Proof</label>
          </div>
          
            <!-- Hidden input fields to store order details -->
            <!-- Hidden input fields to store order details -->
            <% cartItems.forEach(item => { %>
              <input type="hidden" name="items[]" value="<%= item.name %>">
              <input type="hidden" name="quantity[]" value="<%= item.quantity %>">
              <input type="hidden" name="itemId[]" value="<%= item.itemId %>">
              <input type="hidden" name="itemImage[]" value="<%= item.imageUrl %>"> <!-- Add this line for item image -->
            <% }) %>



            <!-- Hidden input fields for email and total -->
           
            <input type="hidden" name="total" value="<%= totalPrice %>">

          <!-- Display uploaded file -->
          <div class="uploaded-file">
            <p>Uploaded File: <span id="uploadedFileName"></span></p>
            <img src="" id="uploadedProofImage" style="max-width: 300px;">
          </div>

          <!-- Submit button -->
          <button type="submit" class="file-upload-label submit-button" id="submit-btn">Submit Payment Proof</button>
        </form>
      </div>
  </div>
  <div id="loading-animation-container">
    <div class="loading-overlay"></div>
    <div id="loading-animation"></div>
  </div>

  <!-- Bottom Nav -->
  <div class="bottom-bar">
    <a href="/dashboard.html" class="active">
      <i class="fa fa-home"></i>
      Home
    </a>
    <a href="/about">
      <i class="fa fa-info-circle"></i>
      About
    </a>
    <a href="/order" id="order-btn">
      <span class="notification" id="cart-count"></span>
      <i class="fa fa-shopping-cart"></i>
      Orders
    </a>
    <a href="/profile">
      <i class="fa fa-user"></i>
      Profile
    </a>
  </div>



  <script>
    // Display the uploaded file name
    const fileUploadInput = document.getElementById('paymentProof');
    const uploadedFileName = document.getElementById('uploadedFileName');
    fileUploadInput.addEventListener('change', (event) => {
      const fileName = event.target.value.split('\\').pop();
      uploadedFileName.textContent = fileName;
    });

    // Display the uploaded proof image
    const uploadedProofImage = document.getElementById('uploadedProofImage');
    fileUploadInput.addEventListener('change', (event) => {
      const file = event.target.files[0];
      const reader = new FileReader();
      reader.onload = function (e) {
        uploadedProofImage.src = e.target.result;
      }
      reader.readAsDataURL(file);
    });

    // Submit button event handler
    const submitButton = document.querySelector('.submit-button');
    submitButton.addEventListener('click', () => {
      // Perform the submission logic here
      alert('Payment proof submitted!');
    });
  </script>

<script>

  const addToCartButton = document.getElementById('submit-btn');
  const loadingAnimationContainer = document.getElementById('loading-animation-container');
  
  addToCartButton.addEventListener('click', () => {
    // Show the loading animation
    loadingAnimationContainer.classList.add('show-loading');
  
    // Simulate a delay for demonstration purposes
    setTimeout(() => {
      // Perform the add to cart operation here
      console.log('Item added to cart');
  
      // Hide the loading animation after the task is completed
      loadingAnimationContainer.classList.remove('show-loading');
    }, 4000); // Simulate a 2-second delay
  });
  
  
      </script>


</body>

</html>
