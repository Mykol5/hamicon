<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9831366589426769"
  crossorigin="anonymous"></script>
  <title>Payment</title>
  <style>
    /* Styles for the payment page */
    /* body {
      font-family: Arial, sans-serif;
      background-color: #f2f2f2;
    } */

    body {
      font-family: system-ui, 'Open Sans';
      font-size: 14px;
    }


    .payment-container {
      max-width: 600px;
      margin: 0 auto;
      padding: 20px;
      background-color: #ffffff;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    h1 {
      font-size: 24px;
      margin-bottom: 20px;
      color: #333333;
    }

    p {
      margin: 5px 0;
      color: #666666;
    }

    .total-price {
      font-size: 18px;
      font-weight: bold;
      margin-top: 10px;
    }

    .payment-form {
      margin-top: 20px;
    }

    .payment-input {
      width: 100%;
      padding: 10px;
      margin-bottom: 10px;
      border: 1px solid #dddddd;
      border-radius: 4px;
    }

    .payment-button {
      background-color: #11e493;
      color: #ffffff;
      border: none;
      padding: 10px 20px;
      font-size: 16px;
      border-radius: 4px;
      cursor: pointer;
    }

                    /* Bottom Nav */
              .bottom-bar {
                position: fixed;
                bottom: 0;
                width: 100%;
                height: 60px;
                background-color: #f2f2f2;
                display: flex;
                justify-content: space-around;
                align-items: center;
                z-index: 1;
              }

        .bottom-bar a {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            color: #777;
            text-decoration: none;
            font-size: 12px;
        }

        .bottom-bar a.active {
            color: #11e493;
            background-color: #f2f2f2;
        }

        .bottom-bar a i {
            font-size: 24px;
        }


   /* Styles for Pay to Bank Account section */
   .bank-account-section {
    margin-top: 40px;
    display: flex;
    flex-direction: column;
    align-items: center;
    height: calc(100vh - 160px); /* Adjust the height based on your requirements */
    overflow-y: auto; /* Add a vertical scroll if needed */
    padding-bottom: 60px; /* Add padding to create a scrolling space */
  }

  /* Styles for file upload */
  .file-upload-container {
    margin-top: 20px;
    text-align: center;
  }

  .file-upload-input {
    display: none;
  }

  .file-upload-label {
    display: inline-block;
    padding: 10px 20px;
    background-color: #11e493;
    color: #ffffff;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }

  .uploaded-file {
    margin-top: 20px;
    text-align: center;
  }

  .submit-button {
    margin-top: 20px;
    margin-left: 65px;
  }



  #loading-animation-container {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9999;
}

.loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Adjust the opacity as desired */
  backdrop-filter: blur(5px); /* Adjust the blur effect as desired */
}

.show-loading {
  display: flex !important;
  align-items: center;
  justify-content: center;
}

/* Add your custom styles for the loading animation here */


/* Define the keyframe animation */
@keyframes spinner {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Apply the spinner animation to a pseudo-element of the loading animation element */
#loading-animation::after {
  content: '';
  display: block;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  border: 4px solid #ccc;
  border-top-color: #333;
  animation: spinner 7.0s linear infinite;
}


.bottom-bar a.loading i {
    animation: spin 2s infinite linear;
  }

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }


  .payment-input {
    width: 100%;
    padding: 10px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
    margin-bottom: 10px;
  }

  .payment-input:focus {
    outline: none;
    border-color: #11e493;
    box-shadow: 0 0 0 2px rgba(0, 255, 136, 0.25);
  }

  .payment-input.select-input {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23333' d='M7 10l5 5 5-5z'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 10px center;
    background-size: 12px;
    padding-right: 30px;
  }

  .payment-input.select-input:focus {
    background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23333' d='M7 10l5 5 5-5z'/%3E%3C/svg%3E"),
      linear-gradient(#fff, #fff);
    background-repeat: no-repeat, repeat;
    background-position: right 10px center, 0 0;
    background-size: 12px, auto;
    border-color: #11e493;
    box-shadow: 0 0 0 2px rgba(0, 255, 136, 0.25);
  }

  /* Mobile responsiveness */
  @media (max-width: 768px) {
    .payment-input {
      font-size: 14px;
    }

    .payment-input.select-input {
      background-position: right 8px center;
      padding-right: 58px;
    }
  }
  </style>
</head>

<body>
  <div class="payment-container">
    <h1>Payment</h1>
    <p>Please enter your payment details below:</p>
    <p>Total Price: $<%= totalPrice %></p>
    <form class="payment-form" action="/process-payment" method="POST">
      <input type="text" name="cardNumber" class="payment-input" placeholder="Card Number" required>
      <input type="text" name="cardHolder" class="payment-input" placeholder="Card Holder" required>
      <input type="text" name="expiryDate" class="payment-input" placeholder="Expiry Date (MM/YY)" required>
      <input type="text" name="cvv" class="payment-input" placeholder="CVV" required>
      <button type="submit" class="payment-button">Pay Now</button>
    </form>

    <!-- <hr>

    <h1>Pay to Bank Account</h1>
    <p>Please make the payment to the following bank account:</p>
    <p>Account Number: <span id="account-number">1234567890</span></p>
    <p>Upload Payment Proof:</p>
    <input type="file" name="paymentProof" class="payment-input" required>

    <button type="submit" class="payment-button">Submit Payment Proof</button> -->
  </div>

  <br>

  <div class="payment-container">
      <!-- Pay to Bank Account section -->
      <div class="bank-account-section">
        <h1>Pay to Bank Account</h1>
        <p>Please make the payment to the following account:</p>
        <p>Account Number: 1234567890</p>
        <p id="totalPrice">Total Price: $<%= totalPrice %></p>
    <br>
        <form action="/submit-payment-proof" method="post" enctype="multipart/form-data">

                    <!-- Shipping address inputs -->
          <select name="city" id="city" class="payment-input" required>
            <option value="">Select City</option>
            <option value="Abeokuta">Abeokuta</option>
            <option value="Ibadan">Ibadan</option>
            <option value="Lagos">Lagos</option>
          </select>
          <input type="text" name="shippingAddress" class="payment-input" placeholder="Shipping Address" required>

          <!-- File upload section -->
          <div class="file-upload-container">
            <input type="file" name="paymentProof" id="paymentProof" class="file-upload-input">
            <label for="paymentProof" class="file-upload-label">Upload Payment Proof</label>
          </div>
          
            <!-- Hidden input fields to store order details -->
            <!-- Hidden input fields to store order details -->
            <% cartItems.forEach(item => { %>
              <input type="hidden" name="items[]" value="<%= item.name %>">
              <input type="hidden" name="quantity[]" value="<%= item.quantity %>">
              <input type="hidden" name="itemId[]" value="<%= item.itemId %>">
              <input type="hidden" name="itemImage[]" value="<%= item.imageUrl %>"> <!-- Add this line for item image -->
            <% }) %>



            <!-- Hidden input fields for email and total -->
           
            <input type="hidden" name="total" value="<%= totalPrice %>">

          <!-- Display uploaded file -->
          <div class="uploaded-file">
            <p>Uploaded File: <span id="uploadedFileName"></span></p>
            <img src="" id="uploadedProofImage" style="max-width: 300px;">
          </div>

          <!-- Submit button -->
          <button type="submit" class="file-upload-label submit-button" id="submit-btn">Submit Payment Proof</button>
        </form>
      </div>
  </div>
  <div id="loading-animation-container">
    <div class="loading-overlay"></div>
    <div id="loading-animation"></div>
  </div>

  <!-- Bottom Nav -->
  <div class="bottom-bar">
    <a href="/dashboard" class="bottom-icon" id="home-icon">
        <i class="fa fa-home"></i>
        Home
    </a>
    <a href="/about" class="bottom-icon" id="about-icon">
        <i class="fa fa-info-circle"></i>
        About
    </a>
    <a href="/order" id="order-btn" class="bottom-icon" id="order-icon">
        <span class="notification" id="cart-count"></span>
        <i class="fa fa-shopping-cart"></i>
        Orders
    </a>
    <a href="/profile" class="bottom-icon" id="profile-icon">
        <i class="fa fa-user"></i>
        Profile
    </a>
</div>


  <script>
    // Display the uploaded file name
    const fileUploadInput = document.getElementById('paymentProof');
    const uploadedFileName = document.getElementById('uploadedFileName');
    fileUploadInput.addEventListener('change', (event) => {
      const fileName = event.target.value.split('\\').pop();
      uploadedFileName.textContent = fileName;
    });

    // Display the uploaded proof image
    const uploadedProofImage = document.getElementById('uploadedProofImage');
    fileUploadInput.addEventListener('change', (event) => {
      const file = event.target.files[0];
      const reader = new FileReader();
      reader.onload = function (e) {
        uploadedProofImage.src = e.target.result;
      }
      reader.readAsDataURL(file);
    });

    // // Submit button event handler
    // const submitButton = document.querySelector('.submit-button');
    // submitButton.addEventListener('click', () => {
    //   // Perform the submission logic here
    //   alert('Payment proof submitted!');
    // });
  </script>

<script>

  const addToCartButton = document.getElementById('submit-btn','dashboardp');
  const loadingAnimationContainer = document.getElementById('loading-animation-container');
  
  addToCartButton.addEventListener('click', () => {
    // Show the loading animation
    loadingAnimationContainer.classList.add('show-loading');
  
    // Simulate a delay for demonstration purposes
    setTimeout(() => {
      // Perform the add to cart operation here
      console.log('Item added to cart');
  
      // Hide the loading animation after the task is completed
      loadingAnimationContainer.classList.remove('show-loading');
    }, 4000); // Simulate a 2-second delay
  });
  
  
      </script>

<script>
  // Add an event listener to the dashboard icon
  const dashboardLink = document.querySelector('.bottom-bar a[href="/dashboard"]');
  dashboardLink.addEventListener('click', handleDashboardClick);

  function handleDashboardClick(event) {
    event.preventDefault();

    // Add the loading animation class to the dashboard icon
    dashboardLink.classList.add('loading');

    // Simulate a delay to mimic loading
    setTimeout(() => {
      // Remove the loading animation class after the delay
      dashboardLink.classList.remove('loading');

      // Navigate to the dashboard page
      window.location.href = "/dashboard";
    }, 2000);
  }
</script>

<script>
  // Get the current URL path
  const currentPath = window.location.pathname;

  // Find the corresponding bottom icon and add the "active" class
  const bottomIcons = document.querySelectorAll('.bottom-icon');
  bottomIcons.forEach(icon => {
    if (icon.getAttribute('href') === currentPath) {
      icon.classList.add('active');
    }
  });
</script>

<script>
  // Get the necessary elements
  const citySelect = document.getElementById('city');
  const totalPriceElement = document.getElementById('totalPrice');
  const originalTotalPrice = parseFloat(totalPriceElement.textContent.replace('Total Price: $', ''));

  // Calculate and update the total price based on the selected city
  if (totalPriceElement) {
    citySelect.addEventListener('change', () => {
      const selectedCity = citySelect.value;
      let shippingFee = 0;

      // Set the appropriate shipping fee for the selected city
      if (selectedCity === 'Abeokuta') {
        shippingFee = 10;
      } else if (selectedCity === 'Ibadan') {
        shippingFee = 15;
      } else if (selectedCity === 'Lagos') {
        shippingFee = 20;
      }

      // Calculate the new total price by adding the shipping fee
      const newTotal = originalTotalPrice + shippingFee;
      totalPriceElement.textContent = `Total Price: $${newTotal}`;
    });
  }
</script>


<script>

  // Assuming you have a submit button with id "submit-btn"
const submitBtn = document.getElementById('submit-btn');

submitBtn.addEventListener('click', function(event) {
  // Assuming you have an input field for the file with id "paymentProofFile"
  const paymentProofFile = document.getElementById('paymentProofFile');

  // Get the uploaded file name
  const uploadedFileName = document.getElementById('uploadedFileName').textContent;

  // Check if a file has been selected
  if (uploadedFileName.trim().length === 0) {
    // Display an alert indicating no payment proof has been submitted
    window.alert('No payment proof submitted. Please submit payment proof to continue.');
    
    // Prevent form submission
    event.preventDefault();
  }
});


</script>

</body>

</html>
